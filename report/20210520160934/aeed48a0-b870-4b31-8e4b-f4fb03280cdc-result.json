{"name": "test_zjc_CustomerPaging_001", "status": "broken", "statusDetails": {"message": "django.core.exceptions.ImproperlyConfigured: Requested setting DATABASES, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.", "trace": "self = <django.db.utils.ConnectionHandler object at 0x7fd53327b280>\nalias = 'default'\n\n    def __getitem__(self, alias):\n        try:\n>           return getattr(self._connections, alias)\n\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/utils/connection.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <asgiref.local.Local object at 0x7fd5332a5970>, key = 'default'\n\n    def __getattr__(self, key):\n        with self._thread_lock:\n            storage = self._get_storage()\n            if key in storage:\n                return storage[key]\n            else:\n>               raise AttributeError(f\"{self!r} object has no attribute {key!r}\")\nE               AttributeError: <asgiref.local.Local object at 0x7fd5332a5970> object has no attribute 'default'\n\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/asgiref/local.py:107: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_assistantappKwCases.Test_assistantapp object at 0x7fd5338985e0>\n\n    @allure.feature(\"客户管理-查询客户\")\n    @allure.severity(\"blocker\")\n    def test_zjc_CustomerPaging_001(self):\n    \t# 读取yaml文件\n    \tyamlFile = ckw.CommonKeyWord().Yaml_Read(\"/Users/zoudw/PycharmProjects/automan/testFile/ZhangJunChao/zjctest.yaml\")\n    \t# 读取yaml里手机号\n    \tmobile = ckw.CommonKeyWord().Yaml_GetByKey(yamlFile,\"mobileAssistant\")\n    \t# 读取Yaml执行环节\n    \tenv = ckw.CommonKeyWord().Yaml_GetByKey(yamlFile,\"env\")\n    \t# 登录发送验证码\n    \tbkw.assistantappApi_CodeSend({\"header\":{\"Content-Type\": \"application/json;charsetUTF-8\",\"Authorization\":\"Bearer\"},\"parma\":{},\"data\":{\"type\":\"login\",\"mobile\":mobile},\"env\":env},\"dict\")\n    \t# 从数据库提取验证码-获取原始sql\n    \ttmpSql = ckw.CommonKeyWord().Yaml_GetByKey(yamlFile,\"getLoginCaptcha\")\n    \t# 从数据库提取验证码-修改sql where条件\n    \tfinSql = ckw.CommonKeyWord().Str_Replace(tmpSql,18099990000,mobile)\n    \t# 打印sql到控制台\n    \tckw.CommonKeyWord().Print_ToControl(\"sql:\",finSql)\n    \t# 打印sql到日志\n    \tckw.CommonKeyWord().Print_ToLog(\"sql:\",finSql)\n    \t# 从数据库提取验证码-执行查询\n>   \tsqlRes = ckw.CommonKeyWord().Db_MysqlSelect({\"host\":\"udtest.uniondrug.com\",\"port\":\"6033\",\"username\":\"test\",\"password\":\"tset@321abc\",\"database\":\"cn_uniondrug_module_data\",\"sql\":finSql})\n\ntestCase/assistantapp/test_assistantappKwCases.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nKeyWordDriver/CommonKeyWord.py:88: in Db_MysqlSelect\n    with connection.cursor() as cursor:\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/utils/connection.py:15: in __getattr__\n    return getattr(self._connections[self._alias], item)\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/utils/connection.py:60: in __getitem__\n    if alias not in self.settings:\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/utils/functional.py:48: in __get__\n    res = instance.__dict__[self.name] = self.func(instance)\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/utils/connection.py:45: in settings\n    self._settings = self.configure_settings(self._settings)\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/db/utils.py:144: in configure_settings\n    databases = super().configure_settings(databases)\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/utils/connection.py:50: in configure_settings\n    settings = getattr(django_settings, self.settings_name)\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/conf/__init__.py:82: in __getattr__\n    self._setup(name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LazySettings [Unevaluated]>, name = 'DATABASES'\n\n    def _setup(self, name=None):\n        \"\"\"\n        Load the settings module pointed to by the environment variable. This\n        is used the first time settings are needed, if the user hasn't\n        configured settings manually.\n        \"\"\"\n        settings_module = os.environ.get(ENVIRONMENT_VARIABLE)\n        if not settings_module:\n            desc = (\"setting %s\" % name) if name else \"settings\"\n>           raise ImproperlyConfigured(\n                \"Requested %s, but settings are not configured. \"\n                \"You must either define the environment variable %s \"\n                \"or call settings.configure() before accessing settings.\"\n                % (desc, ENVIRONMENT_VARIABLE))\nE           django.core.exceptions.ImproperlyConfigured: Requested setting DATABASES, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.\n\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/conf/__init__.py:63: ImproperlyConfigured"}, "attachments": [{"name": "log", "source": "b908c8b3-134f-496a-bdf1-7e6cfc0ac4fc-attachment.txt", "type": "text/plain"}], "start": 1621498175340, "stop": 1621498176158, "uuid": "04cc3464-6e03-4c47-92da-1d2edd75d25e", "historyId": "23ded4eeb6968522d712c2e9b8e8c871", "testCaseId": "9fc8c33ca781418bccdc19be13dc4eef", "fullName": "testCase.assistantapp.test_assistantappKwCases.Test_assistantapp#test_zjc_CustomerPaging_001", "labels": [{"name": "feature", "value": "客户管理-查询客户"}, {"name": "severity", "value": "blocker"}, {"name": "parentSuite", "value": "testCase.assistantapp"}, {"name": "suite", "value": "test_assistantappKwCases"}, {"name": "subSuite", "value": "Test_assistantapp"}, {"name": "host", "value": "localhost"}, {"name": "thread", "value": "2828-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCase.assistantapp.test_assistantappKwCases"}]}