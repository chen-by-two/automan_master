{"name": "test_zjc_WorkLists_002", "status": "broken", "statusDetails": {"message": "django.core.exceptions.ImproperlyConfigured: Requested setting DATABASES, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.", "trace": "self = <django.db.utils.ConnectionHandler object at 0x7fd53327b280>\nalias = 'default'\n\n    def __getitem__(self, alias):\n        try:\n>           return getattr(self._connections, alias)\n\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/utils/connection.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <asgiref.local.Local object at 0x7fd5332a5970>, key = 'default'\n\n    def __getattr__(self, key):\n        with self._thread_lock:\n            storage = self._get_storage()\n            if key in storage:\n                return storage[key]\n            else:\n>               raise AttributeError(f\"{self!r} object has no attribute {key!r}\")\nE               AttributeError: <asgiref.local.Local object at 0x7fd5332a5970> object has no attribute 'default'\n\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/asgiref/local.py:107: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_assistantappKwCases.Test_assistantapp object at 0x7fd533dd3700>\n\n    @allure.feature(\"门店任务-取消任务\")\n    @allure.severity(\"blocker\")\n    def test_zjc_WorkLists_002(self):\n    \t# 读取yaml文件\n    \tyamlFile = ckw.CommonKeyWord().Yaml_Read(\"/Users/zoudw/PycharmProjects/automan/testFile/ZhangJunChao/zjctest.yaml\")\n    \t# 读取yaml里手机号\n    \tmobile = ckw.CommonKeyWord().Yaml_GetByKey(yamlFile,\"mobileAssistant\")\n    \t# 读取Yaml登录密码\n    \tpassword = ckw.CommonKeyWord().Yaml_GetByKey(yamlFile,\"password\")\n    \t# 读取Yaml执行环节\n    \tenv = ckw.CommonKeyWord().Yaml_GetByKey(yamlFile,\"env\")\n    \t# 登录获取token-调取接口\n    \tloginRes = bkw.assistantappApi_UserLogin({\"header\":{\"Content-Type\": \"application/json;charsetUTF-8\"},\"parma\":{},\"data\":{\"mobile\":mobile,\"code\":password},\"env\":env},\"dict\")\n    \t# 登录获取token-提取token\n    \ttoken = ckw.CommonKeyWord().Json_GetJsonValue(loginRes,[[\"data\",\"token\"]])\n    \t# 登录获取userid-提取userid\n    \tuserid = ckw.CommonKeyWord().Json_GetJsonValue(loginRes,[[\"data\",\"id\"]])\n    \t# 打印token到控制台\n    \tckw.CommonKeyWord().Print_ToControl(\"token：\",token)\n    \t# 打印token到日志\n    \tckw.CommonKeyWord().Print_ToLog(\"token：\",token)\n    \t# 读取yaml文件\n    \tyamlFile = ckw.CommonKeyWord().Yaml_Read(\"/Users/zoudw/PycharmProjects/automan/testFile/ZhangJunChao/zjctest.yaml\")\n    \t# 读取yaml查询任务数据idsql\n    \tGetCanceldsql = ckw.CommonKeyWord().Yaml_GetByKey(yamlFile,\"GetCanceld\")\n    \t# 打印查询结果到控制台\n    \tckw.CommonKeyWord().Print_ToControl(\"Canceldsql：\",GetCanceldsql)\n    \t# 打印查询结果到日志\n    \tckw.CommonKeyWord().Print_ToLog(\"Canceldsql：\",GetCanceldsql)\n    \t# mysql执行查询-查询取消任务id\n>   \tGetCanceld = ckw.CommonKeyWord().Db_MysqlSelect({\"host\":\"udtest.uniondrug.com\",\"port\":\"6033\",\"username\":\"develop\",\"password\":\"develop123\",\"database\":\"cn_uniondrug_module_assistant\",\"sql\":\"SELECT id FROM `cn_uniondrug_module_assistant`.`work_list` WHERE `storeId`  '160846' AND `userId`  '306' AND `inDate`  '20210518';\"})\n\ntestCase/assistantapp/test_assistantappKwCases.py:2065: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nKeyWordDriver/CommonKeyWord.py:88: in Db_MysqlSelect\n    with connection.cursor() as cursor:\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/utils/connection.py:15: in __getattr__\n    return getattr(self._connections[self._alias], item)\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/utils/connection.py:60: in __getitem__\n    if alias not in self.settings:\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/utils/functional.py:48: in __get__\n    res = instance.__dict__[self.name] = self.func(instance)\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/utils/connection.py:45: in settings\n    self._settings = self.configure_settings(self._settings)\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/db/utils.py:144: in configure_settings\n    databases = super().configure_settings(databases)\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/utils/connection.py:50: in configure_settings\n    settings = getattr(django_settings, self.settings_name)\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/conf/__init__.py:82: in __getattr__\n    self._setup(name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <LazySettings [Unevaluated]>, name = 'DATABASES'\n\n    def _setup(self, name=None):\n        \"\"\"\n        Load the settings module pointed to by the environment variable. This\n        is used the first time settings are needed, if the user hasn't\n        configured settings manually.\n        \"\"\"\n        settings_module = os.environ.get(ENVIRONMENT_VARIABLE)\n        if not settings_module:\n            desc = (\"setting %s\" % name) if name else \"settings\"\n>           raise ImproperlyConfigured(\n                \"Requested %s, but settings are not configured. \"\n                \"You must either define the environment variable %s \"\n                \"or call settings.configure() before accessing settings.\"\n                % (desc, ENVIRONMENT_VARIABLE))\nE           django.core.exceptions.ImproperlyConfigured: Requested setting DATABASES, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.\n\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/django/conf/__init__.py:63: ImproperlyConfigured"}, "attachments": [{"name": "log", "source": "1b85a13d-8508-4b65-ab05-dda55f1062e5-attachment.txt", "type": "text/plain"}], "start": 1621498241782, "stop": 1621498241944, "uuid": "4efe8dbb-4eab-438d-8ed6-c0f2c6a54170", "historyId": "e862ac5b108ac3a9d372b8eea5a117b6", "testCaseId": "976d816553d53c1b9c6d0578e9182350", "fullName": "testCase.assistantapp.test_assistantappKwCases.Test_assistantapp#test_zjc_WorkLists_002", "labels": [{"name": "feature", "value": "门店任务-取消任务"}, {"name": "severity", "value": "blocker"}, {"name": "parentSuite", "value": "testCase.assistantapp"}, {"name": "suite", "value": "test_assistantappKwCases"}, {"name": "subSuite", "value": "Test_assistantapp"}, {"name": "host", "value": "localhost"}, {"name": "thread", "value": "2828-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCase.assistantapp.test_assistantappKwCases"}]}